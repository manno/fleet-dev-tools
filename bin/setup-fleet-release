#!/bin/bash
# Description: install fleet standalone into the current kubectl context

set -euxo pipefail

if [ ! -d ./charts/fleet ]; then
  echo "please change the current directory to the fleet repo checkout"
  exit 1
fi

cluster_name=${1-upstream}
VER=${VER-0.12.3}

host=$( docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "k3d-$cluster_name-server-0" )
ca=$( kubectl config view --flatten -o jsonpath='{.clusters[?(@.name == "k3d-'"$cluster_name"'")].cluster.certificate-authority-data}' | base64 -d )
server="https://$host:6443"

# single cluster
helm -n cattle-fleet-system upgrade --install --create-namespace --wait fleet-crd "https://github.com/rancher/fleet/releases/download/v$VER/fleet-crd-$VER.tgz"
helm -n cattle-fleet-system upgrade --install --create-namespace --wait \
  --set apiServerCA="$ca" \
  --set apiServerURL="$server" \
  --set debug=true --set debugLevel=1 \
  --set leaderElection.leaseDuration=10s \
  --set leaderElection.retryPeriod=1s \
  --set leaderElection.renewDeadline=5s \
  --set agent.leaderElection.leaseDuration=10s \
  --set agent.leaderElection.retryPeriod=1s \
  --set agent.leaderElection.renewDeadline=5s \
  --set "image.tag=v$VER" \
  --set "agentImage.tag=v$VER" \
  fleet "https://github.com/rancher/fleet/releases/download/v$VER/fleet-$VER.tgz"
  # --set gitjob.gitjob.tag=v0.1.26 \
  # --set gitjob.tekton.tag=v0.1.5 \

kubectl -n cattle-fleet-system rollout status deploy/fleet-controller
{ grep -q -m 1 "fleet-agent"; kill $!; } < <(kubectl get deployment -n cattle-fleet-system -w)
kubectl -n cattle-fleet-system rollout status deploy/fleet-agent
